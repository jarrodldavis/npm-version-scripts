#! /usr/bin/env node

const { EOL } = require('os');

const { $, $$, exit } = require('./helpers');
const { getRepoInfo } = require('./repo');
const mergePullRequest = require('./merge-pull-request');

const { remote, releaseBranch, productionBranch, prTitle, defaultBranch, milestone } = getRepoInfo();

// find current pull request for version release
const rawResults = $(`hub pr list --head ${releaseBranch} --base ${productionBranch} -f "%I"`);
const [prId, ...others] = rawResults.split(EOL);
const arrow = "\u2190";
if (typeof prId !== 'string' || prId.length === 0) {
  exit(`no open pull request for ${productionBranch} ${arrow} ${releaseBranch}`);
} else if (others.length > 0) {
  exit(`multiple pull requests open for ${productionBranch} ${arrow} ${releaseBranch}`);
}

// merge version release into production branch
mergePullRequest(prId);
// update/create release branch to match production branch
$$(`hub checkout -B ${releaseBranch} ${productionBranch}`);
// re-publish version branch
$$(`hub push --follow-tags --set-upstream ${remote} ${releaseBranch}`);
// create pull request to merge production commits into default branch
$$(`hub pull-request --no-edit --message "${prTitle}" --base "${defaultBranch}" --milestone "${milestone}"`);
